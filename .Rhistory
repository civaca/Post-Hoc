per <- function(vector, x){
names <- c(x, "%")
print(names)
x <- tibble(unlist(vector), "%"=unlist(prop.table(vector)))
return( set_names(x, names)) }
per(z[2],"d")
map2()
?map2
map2(z,names_z,per)
map2(z,names_z,per)
?reduce
?Reduce
res <- z%>% map(per,names)
res <- map2(z,names_z,per)
res
reduce(res, ~ cbind(.x, .y))
reduce(res, ~ cbind(.x, .y))
?reduce
reduce(res, ~ bind_cols(.x, .y))
reduce(res, ~ bind_cols(.x, .y))
?cbind
reduce(res, ~ cbind(.x, .y))
reduce(res, ~ cbind(.x, .y))
Reduce(function(x, y) {bind_cols(x, y)},res)
Reduce(function(x, y) {bind_cols(x, y)},res)
Reduce(function(x, y) {cbind(x, y)},res)
per <- function(vector, x){
names <- c(x, "%")
x <- tibble(unlist(vector), "%"=unlist(prop.table(vector)))
return( set_names(x, names)) }
z <- data_social %>% select(-1)
names_z <- colnames(z)
res <- map2(z,names_z,per)
reduce(res, ~ cbind(.x, .y))
x <- tibble(unlist(vector), "%"=label_percent(0.1) (unlist(prop.table(vector))))
per <- function(vector, x){
names <- c(x, "%")
x <- tibble(unlist(vector), "%"=label_percent(0.1) (unlist(prop.table(vector))))
return( set_names(x, names)) }
z <- data_social %>% select(-1)
names_z <- colnames(z)
res <- map2(z,names_z,per)
reduce(res, ~ cbind(.x, .y))
per <- function(vector, x){
names <- c(x, "%")
x <- tibble(unlist(vector), "%"=label_percent(0.01) (unlist(prop.table(vector))))
return( set_names(x, names)) }
z <- data_social %>% select(-1)
names_z <- colnames(z)
res <- map2(z,names_z,per)
reduce(res, ~ cbind(.x, .y))
reduce(res, ~ cbind(.x, .y)) %>% cbind(data_social[1])
?map2()
map2(z,names_z,per) %>%
reduce(, ~ cbind(.x, .y)) %>% cbind(data_social[1])
per <- function(vector, x){
names <- c(x, "%")
x <- tibble(unlist(vector), "%"=label_percent(0.01) (unlist(prop.table(vector))))
return( set_names(x, names)) }
z <- data_social %>% select(-1)
names_z <- colnames(z)
map2(z,names_z,per) %>%
reduce(, ~ cbind(.x, .y)) %>% cbind(data_social[1])
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_social[1])
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_social[1]) %>%
rename("Habilidades sociales"=IMC)
?rename
data_h <- data_social %>% rename("Habilidades sociales"=IMC)
data_h
z <- data_h %>% select(-1)
names_z <- colnames(z)
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1]) %>%
rename("Habilidades sociales"=IMC)
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
map2(z,names_z,per) %>%
+   reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
map2(z,names_z,per) %>%
+   reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
map2(z,names_z,per) %>% reduce(~ cbind(.x, .y)) %>% cbind(data_h[1])
per <- function(vector, x){
names <- c(x, "%")
x <- tibble(unlist(vector), "%"=label_percent(0.01) (unlist(prop.table(vector))))
return( set_names(x, names)) }
data_h <- data_social %>% rename("Habilidades sociales"=IMC)
z <- data_h %>% select(-1)
names_z <- colnames(z)
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1]) %>% kable()
map2(z,names_z,per) %>%
reduce(~ cbind(.x, .y)) %>% cbind(data_h[1]) %>% kable() %>% kable_classic()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library("oddsratio")
library("epitools")
library(tidyverse)
library("gmodels")
library("readxl")
library("tinytex")
library("knitr")
library("kableExtra")
library("webshot")
library(officer)
library(gdtools)
library(flextable)
library(scales)
library(janitor)
library(nycflights13)
data <- read_excel("Matriz.xlsx")
data1 <- as_tibble(data)
class_icm <- c("Bajo Peso", "Normal", "Sobrepeso", "Obeso")
IMC <- function(peso, talla) {
resultado <- peso / ((talla / 100) * (talla / 100))
return(resultado)
}
grupoICM1 <- function(a) {
a <- replace(a, a < 18.5, 1)
a <- replace(a, a >= 18.5 & a < 25, 2)
a <- replace(a, a >= 25 & a < 30, 3)
a <- replace(a, a >= 30, 4)
a <- factor(a)
levels(a) <- c("Bajo Peso", "Normal", "Sobrepeso", "Obeso")
return(a)
}
grupoICM <- function(a) {
a <- replace(a, a < 18.5, 1)
a <- replace(a, a >= 18.5 & a < 25, 2)
a <- replace(a, a >= 25 & a < 30, 3)
a <- replace(a, a >= 30, 4)
return(a)
}
obesidad <- function(a) {
a <- a  %>%  replace(.== 1, 0)%>%
replace(.==2,0) %>%
replace(.==3,0) %>%
replace(.==4,1)
return(a)
}
enfermedad <- function(a) {
a  <- a %>% replace(.==3,0) %>%
replace(.==1,1) %>%
replace (.==2,1)
return(a)
}
I_resultados <- IMC(data1$Peso_inic_embarazo, data$Talla...15)
ClasporICM <- grupoICM(I_resultados)
a <- table(ClasporICM)
PdgrupoICM <- sapply(a, function(x) {
x / sum(a) * 100
})
z <- as.data.frame(PdgrupoICM)
print(z)
b <- as.data.frame(a)
b %>%
kbl() %>%
kable_classic("basic", full_width = FALSE)
c <- b %>%
kbl() %>%
kable_classic("basic", full_width = FALSE)
data1 %>%
mutate(IMC_2 = IMC(data1[[11]], data1[[15]])) %>%
mutate(IMC_1 = cut(IMC_2,c(1,18.5,25,30,100), right = FALSE, labels = class_icm)) %>%
group_by(IMC_1) %>%
summarise(count=n()) %>%
filter(!is.na(IMC_1)) %>%
print ()
data2 <- data1 %>%
mutate(IMC_1 = IMC(data1[11], data1[15])) %>%
mutate(IMC_1 = grupoICM(IMC_1))
IMC_categoria <- data1 %>%
mutate(IMC_1 = IMC(data1[11], data1[15])) %>%
mutate(IMC_1 = grupoICM(IMC_1)) %>%
group_by(.[[52]]) %>%
summarise(count=n()) %>%
filter(!is.na(Peso_inic_embarazo)) %>%
print()
classs <- as.numeric(data$Clasificación)
classs
lm.cars <- lm(I_resultados ~ data$`Diag_Peso RN`)
lm.cars
summary(lm.cars)
bajo_peso <- data %>% filter(data$`Diag_Peso RN` == 1)
ct <- CrossTable(data$Clasificación, data$`Diag_Peso RN`, expected = FALSE, prop.c = FALSE, prop.t = FALSE)
# ct<- CrossTable(data,data$`Diag_Peso RN`)
c <- c("a", "b", "c", "d")
c
car <- data %>% mutate(data$Clasificación == 1, "Bajo Peso", data$Clasificación)
View(car)
Ct1 <- CrossTable(data$`Diab_ Gestac`, car$Clasificación)
trial <- matrix(c(43, 35, 230, 136), ncol = 2)
colnames(trial) <- c("SiOBeso", "Noobesos")
rownames(trial) <- c("SiEnfer", "Noenfermo")
trial.table <- as.table(trial)
View(trial)
trial <- matrix(c(0.5, 156.5, 0.5, 306.5), ncol = 2)
chisq.test(trial, correct = F)
fisher.test(trial)
x <- data$`N° HC`[!is.na(data$Edad)]
IMC_Preconcepctionl <- hist(ClasporICM, breaks = c(0, 1, 2, 3, 4), freq = TRUE)
IMC_Preconcepctionl <- hist(IMC_categoria$count, freq = TRUE)
# ClasporICM
# this was needed because usingp[] gives a data.frame
data4 <- data1 %>% mutate(IMC_1 = IMC(data1[1], data1[15])) ## histograma
fixed <- as.numeric(unlist(data4$IMC_1))
hist(fixed)
barplot(table(as.numeric(unlist(data2[51]))))
hist(as.numeric(unlist(data2[51])), c(0, 1, 2, 3, 4), freq = TRUE)
# This last was just to change to factors, not realy necesary for
# this is better
data4 <- data1 %>%
mutate(IMC_1 = IMC(Peso_inic_embarazo, Talla...15), IMCP = IMC(Peso_fin_gest, Talla...15)) %>%
mutate(IMC_2 = grupoICM(IMC_1), IMCP = grupoICM(IMCP))
# Tablas de Graficos finales
data5 <- data4 %>%
filter(!is.na(IMC_2)) %>%
group_by(IMC_2) %>%
summarise(count = n()) %>%
mutate(freq = count / sum(count)) %>%
mutate(etiquetas = scales::percent(freq)) %>%
mutate(IMC_2=factor(IMC_2)) %>%
mutate(IMC_2=fct_recode(IMC_2,
"Bajo Peso"=  "1",
"Normal" ="2" ,
"Sobrepso" ="3" ,
"Obesidad" ="4" ) )
data6 <- data4 %>%
filter(!is.na(IMCP)) %>%
group_by(IMCP) %>%
summarise(count = n()) %>%
mutate(freq = count / sum(count)) %>%
mutate(etiquetas = scales::percent(freq)) %>%
mutate(IMCP = recode_factor(IMCP, "1" = "Bajo Peso", "2" = "Normal", "3" = "Sobrepso", "4" = "Obesidad"))
data7 <- data4 %>%
filter(!is.na(`Diag_Peso RN`)) %>%
group_by(`Diag_Peso RN`) %>%
summarise(count = n()) %>%
mutate(freq = count / sum(count)) %>%
mutate(etiquetas = percent(freq)) %>%
mutate(`Diag_Peso RN` = recode_factor(`Diag_Peso RN`, "1" = "Pequeño", "2" = "Adecuado", "3" = "Grande"))
print(data5)
print(data6)
print(data7)
ggplot(data = data5, aes(x = IMC_2, y = count)) +
geom_col(fill = "#72A98F") +
geom_text(aes(label = etiquetas), vjust = -0.3) +
geom_text(aes(label = count), vjust = 2, hjust = 0.6, col = "white") +
labs(x = NULL, y = "Frecuencia") +
theme(panel.grid.major = element_line(linetype = "blank"), panel.grid.minor = element_line(linetype = "blank"), panel.background = element_rect(fill = "snow1"))
ggplot(data = data6, aes(x = IMCP, y = count)) +
geom_col(fill = "#72A98F") +
geom_text(aes(label = etiquetas), vjust = -0.3) +
geom_text(aes(label = count), vjust = 2, hjust = 0.6, col = "white") +
labs(x = NULL, y = "Frecuencia") +
theme(panel.grid.major = element_line(linetype = "blank"), panel.grid.minor = element_line(linetype = "blank"), panel.background = element_rect(fill = "snow1"))
ggplot(data = data7, aes(x = `Diag_Peso RN`, y = count, )) +
geom_col(fill = "#72A98F", col = "#72A98F") +
geom_text(aes(label = etiquetas), vjust = -0.3) +
geom_text(aes(label = count), vjust = 1, hjust = 0.6, col = "white") +
labs(x = NULL, y = "Frecuencia") +
theme(panel.grid.major = element_line(linetype = "blank"), panel.grid.minor = element_line(linetype = "blank"), panel.background = element_rect(fill = "snow1")) +
labs(fill = "Peso de RN") +
theme(legend.position = "none")
data4 <- data1 %>%
mutate(IMC_1 = IMC(Peso_inic_embarazo, Talla...15), IMCP = IMC(Peso_fin_gest, Talla...15)) %>%
mutate(IMC_2 = grupoICM1(IMC_1), IMCP = grupoICM1(IMCP)) %>% filter(!is.na(IMC_2))
ggplot(data=data4,mapping=aes(x = "", fill=as.factor(IMC_2)))+
geom_bar()+
coord_polar(theta = "y")+
scale_fill_brewer(palette = 2, name = "IMC")+
theme_void()
b
tabla <- flextable(b)
# save_as_docx(tabla,path="TAbal1.docx")
mylist <- list()
mylist[[2]] <- data1 %>%
mutate(enf = enfermedad(data1[[16 + 1]])) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "0" = "No Tiene", "1" = "Tiene")) %>%
mutate(id = rep(c(colnames(data1[16 + 1])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
tablas <- c("d1", "d2", "d3", "d4")
for (i in 0:7) {
assign(paste("d", i, sep = ""), data1 %>% mutate(enf = enfermedad(data1[[16 + i]])) %>%
group_by(enf) %>%
summarise(count = n()) %>% filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>% mutate(enf = recode_factor(enf, "0" = "No Tiene", "1" = "Tiene")) %>%
mutate(id = rep(c(colnames(data1[16 + i])), times = nrow(.))))
}
df_list <- mget(ls(pattern = "d[0-7]"))
my_table <- Reduce(
function(x, y) {
full_join(x, y)
}, df_list
)
tablefinal <- full_join(d0, d1)
x <- tablefinal %>% pivot_wider(id_cols = id, names_from = enf, values_from = count)
x <- my_table %>% pivot_wider(id_cols = id, names_from = enf, values_from = count)
# }
print(tablefinal)
listaTMaterna <- list()
for (i in 1:7) {
listaTMaterna[[i]] <- data1 %>%
mutate(enf = enfermedad(data1[[15 + i]])) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "0" = "No Tiene", "1" = "Tiene")) %>%
mutate(id = rep(c(colnames(data1[15 + i])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
}
tablaMaterna <- listaTMaterna %>%
reduce(full_join) %>%
pivot_wider(id_cols = id, names_from = enf, values_from = c("count", "freq"))
print(tablaMaterna)
listaNino <- list()
for (i in 1:5) {
listaNino[[i]] <- data1 %>%
mutate(enf = data1[[43 + i]]) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "1" = "Si tiene", "2" = "No Tiene")) %>%
mutate(id = rep(c(colnames(data1[43 + i])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
}
tablaNino <- Reduce(
function(x, y, ...) {
full_join(x, y, ...)
}, listaNino
) %>% pivot_wider(id_cols = id, names_from = enf, values_from = c("count", "freq"))
print(tablaNino)
listaComplicaciones <- list()
for (i in 1:4) {
listaComplicaciones[[i]] <- data1 %>%
mutate(enf = data1[[26 + i]]) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "1" = "Si tiene", "2" = "No Tiene")) %>%
mutate(id = rep(c(colnames(data1[26 + i])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
}
tablaComplicaciones <- Reduce(
function(x, y, ...) {
full_join(x, y, ...)
}, listaComplicaciones
) %>% pivot_wider(id_cols = id, names_from = enf, values_from = c("count", "freq"))
print(tablaComplicaciones)
listaNino <- list()
for (i in 1:5) {
listaNino[[i]] <- data1 %>%
mutate(enf = data1[[43 + i]]) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "1" = "Si tiene", "2" = "No Tiene")) %>%
mutate(id = rep(c(colnames(data1[43 + i])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
}
tablaNino <- Reduce(
function(x, y, ...) {
full_join(x, y, ...)
}, listaNino
) %>% pivot_wider(id_cols = id, names_from = enf, values_from = c("count", "freq"))
print(tablaNino)
listaComplicaciones <- list()
for (i in 1:4) {
listaComplicaciones[[i]] <- data1 %>%
mutate(enf = data1[[26 + i]]) %>%
group_by(enf) %>%
summarise(count = n()) %>%
filter(!is.na(enf)) %>%
mutate(enf = factor(enf)) %>%
mutate(enf = recode_factor(enf, "1" = "Si tiene", "2" = "No Tiene")) %>%
mutate(id = rep(c(colnames(data1[26 + i])), times = nrow(.))) %>%
mutate(freq = count / sum(count)) %>%
mutate(freq = percent(freq))
}
tablaComplicaciones <- Reduce(
function(x, y, ...) {
full_join(x, y, ...)
}, listaComplicaciones
) %>% pivot_wider(id_cols = id, names_from = enf, values_from = c("count", "freq"))
print(tablaComplicaciones)
data3 <- mutate(data2, IMC_1 = obesidad(IMC_1))
tapply(data3[[28]], data3[[52]], length)
# This is with dyplyr
TC <- data3 %>%
group_by(data3[28], IMC_1 ) %>%
summarize(count = n()) %>%
pivot_wider(names_from = 1, values_from = count) %>%
ungroup() %>%
select(-1) %>%
chisq.test()
TC <- data2 %>%
mutate(IMC_1 = obesidad(IMC_1)) %>%
filter(!is.na(IMC_1))
CrossTable(TC[[28]], unlist(TC$IMC_1), format = "SPSS")
TC3 <- 1
i <- 1
while (i <= 4) {
TC <- data3 %>%
mutate(IMC_1 = obesidad(IMC_1)) %>%
group_by(data3[26 + i], data3[52], ) %>%
summarize(count = n(), .groups = "keep") %>%
na.omit() %>%
pivot_wider(names_from = 1, values_from = count) %>%
filter(!is.na(IMC_1)) %>%
ungroup() %>%
select(-1) %>%
chisq.test()
TC3[i] <- (TC$p.value)
i <- i + 1
}
print(TC3)
# this is better,
chilist <- vector()
colnames <- vector()
for (i in 1:4) {
chilist[i] <- (chisq.test(table(unlist(data3[[26 + i]]), unlist(data3[52]))))$p.value
colnames[i] <- names(data3[26 + i])
}
for (i in 5:12) {
data3 <- mutate(data2, IMC_1 = obesidad(IMC_1), enf = enfermedad(data3[11 + i]))
chilist[i] <- chisq.test(table(unlist(data3$enf), unlist(data3$IMC_1)))$p.value
colnames[i] <- names(data3[11 + i])
}
for (i in c(13, 15, 16, 17)) {
chilist[i] <- (chisq.test(table(unlist(data3[[31 + i]]), unlist(data3[52]))))$p.value
colnames[i] <- names(data3[31 + i])
}
obesidadchi <- sapply(chilist, function(x) {
return(round(x, digits = 4))
})
print(as.data.frame(obesidadchi, colnames))
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(data.table)
library(dtplyr)
library(readxl)
library(scales)
library("kableExtra")
data_social <- read_excel("./datos_social.xlsx")
data_crecimiento <- read_excel("./datos_crecimiento.xlsx")
##Relación entre estilo de vida y habilidades sociales
ds <- data_social %>% select(-1) %>% as.matrix()
rownames(ds) <- data_social$IMC
chisq.test(ds)
##Relación entre estilo de vida y crecimiento
dc <- data_crecimiento %>% select(-1) %>% as.matrix()
rownames(dc) <- data_crecimiento$IMC
chisq.test(dc)
#de habilidades sociales
library("chisq.posthoc.test")
res_s <- chisq.posthoc.test(ds)
#de crecimiento
res_c <- chisq.posthoc.test(dc)
tabla_final <- res_s %>% full_join(res_c) %>% kable %>% kable_classic()
tabla_final
mycolors2 <- c("#e0f3db", "#a8ddb5","#43a2ca")
ds %>% as_tibble(rownames= "cat") %>% pivot_longer(cols = -1,names_to = "EstiloVida", values_to = "n")  %>%
ggplot(aes(cat,n)) +
geom_col(aes(fill=EstiloVida), position = "dodge")+
scale_fill_manual(values = mycolors2)+
theme_light()+
labs(x="Habilidades Sociales")
dc %>% as_tibble(rownames= "cat") %>% pivot_longer(cols = -1,names_to = "EstiloVida", values_to = "n")  %>%
ggplot(aes(cat,n)) +
geom_col(aes(fill=EstiloVida), position = "dodge")+
scale_fill_manual(values = mycolors2)+
theme_light()+
labs(x="IMC")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(data.table)
library(dtplyr)
library(readxl)
library(scales)
library("kableExtra")
data_social <- read_excel("./datos_social.xlsx")
data_crecimiento <- read_excel("./datos_crecimiento.xlsx")
##Relación entre estilo de vida y habilidades sociales
ds <- data_social %>% select(-1) %>% as.matrix()
rownames(ds) <- data_social$IMC
chisq.test(ds)
##Relación entre estilo de vida y crecimiento
dc <- data_crecimiento %>% select(-1) %>% as.matrix()
rownames(dc) <- data_crecimiento$IMC
chisq.test(dc)
library(epitools)
library(epitools)
library(epitools)
dc
riskratio(dc)
